#pragma once

////////////////////////////////////////////////////////////////////////////////
//  Headers
////////////////////////////////////////////////////////////////////////////////

#include "PCH.h"

////////////////////////////////////////////////////////////////////////////////
/// METRIC CONVERSION HELPERS
////////////////////////////////////////////////////////////////////////////////
namespace Units
{
	////////////////////////////////////////////////////////////////////////////////
	/// STORAGE SIZES
	////////////////////////////////////////////////////////////////////////////////

	////////////////////////////////////////////////////////////////////////////////
	float bytesToKilobytes(float bytes);
    
	////////////////////////////////////////////////////////////////////////////////
	float bytesToMegabytes(float bytes);
    
	////////////////////////////////////////////////////////////////////////////////
	float bytesToGigabytes(float bytes);
    
	////////////////////////////////////////////////////////////////////////////////
	float bytesToTerrabytes(float bytes);

	////////////////////////////////////////////////////////////////////////////////
	float kilobytesToBytes(float kbytes);
    
	////////////////////////////////////////////////////////////////////////////////
	float megabytesToBytes(float mbytes);
    
	////////////////////////////////////////////////////////////////////////////////
	float gigabytesToBytes(float gbytes);
    
	////////////////////////////////////////////////////////////////////////////////
	float terrabytesToBytes(float tbytes);

	////////////////////////////////////////////////////////////////////////////////
	std::pair<float, std::string> normalizeBytes(float bytes);

	////////////////////////////////////////////////////////////////////////////////
	std::string bytesToString(float bytes);

	////////////////////////////////////////////////////////////////////////////////
	/// TIME METRICS
	////////////////////////////////////////////////////////////////////////////////

	////////////////////////////////////////////////////////////////////////////////
	double secondsToMilliseconds(double seconds);

	////////////////////////////////////////////////////////////////////////////////
	double secondsToMicroseconds(double seconds);

	////////////////////////////////////////////////////////////////////////////////
	double secondsToNanoseconds(double seconds);

	////////////////////////////////////////////////////////////////////////////////
	double secondsToMinutes(double seconds);

	////////////////////////////////////////////////////////////////////////////////
	double secondsToHours(double seconds);

	////////////////////////////////////////////////////////////////////////////////
	double secondsToDays(double seconds);

	////////////////////////////////////////////////////////////////////////////////
	double millisecondsToSeconds(double milli);

	////////////////////////////////////////////////////////////////////////////////
	double microsecondsToSeconds(double micro);

	////////////////////////////////////////////////////////////////////////////////
	double nanosecondsToSeconds(double nano);

	////////////////////////////////////////////////////////////////////////////////
	double minutesToSeconds(double minutes);
	
	////////////////////////////////////////////////////////////////////////////////
	double hoursToSeconds(double hours);

	////////////////////////////////////////////////////////////////////////////////
	double daysToSeconds(double days);

	////////////////////////////////////////////////////////////////////////////////
	std::string secondsToString(double seconds);

	////////////////////////////////////////////////////////////////////////////////
	std::string minutesToString(double minutes);
}