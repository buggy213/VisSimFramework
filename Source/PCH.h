#pragma once

////////////////////////////////////////////////////////////////////////////////
//  Generated settings
////////////////////////////////////////////////////////////////////////////////

#include "settings.h"

////////////////////////////////////////////////////////////////////////////////
//  STL
////////////////////////////////////////////////////////////////////////////////

#define _CRTDBG_MAP_ALLOC
#include <stdlib.h>
#include <crtdbg.h>

#include <cassert>
#include <memory>
#include <typeinfo>
#include <cwchar>
#include <string>
#include <string_view>
#include <iostream>
#include <iomanip>
#include <fstream>
#include <sstream>
#include <array>
#include <vector>
#include <set>
#include <map>
#include <stack>
#include <list>
#include <forward_list>
#include <unordered_set>
#include <unordered_map>
#include <thread>
#include <future>
#include <mutex>
#include <shared_mutex>
#include <variant>
#include <any>
#include <functional>
#include <algorithm>
#include <numeric>
#include <complex>
#include <ctime>
#include <regex>
#include <locale>
#include <codecvt>
#include <execution>
#include <filesystem>
#include <optional>
//#include <ranges>

////////////////////////////////////////////////////////////////////////////////
//  Windows headers
////////////////////////////////////////////////////////////////////////////////

#define NOMINMAX

#include "windows.h"
#include "ntstatus.h"
#include "Powerbase.h"
#include "Powersetting.h"
#include "Powrprof.h"
#include "Vfw.h"
#include "Dbghelp.h"
#include <mfapi.h>
#include <Mfidl.h>
#include <shlwapi.h>

#undef near
#undef far

////////////////////////////////////////////////////////////////////////////////
//  typesafe library
////////////////////////////////////////////////////////////////////////////////

#include "type_safe/strong_typedef.hpp"

////////////////////////////////////////////////////////////////////////////////
//  tree library
////////////////////////////////////////////////////////////////////////////////

#include "tree/tree.hh"

////////////////////////////////////////////////////////////////////////////////
//  metaenum library
////////////////////////////////////////////////////////////////////////////////

#include "meta_enum/meta_enum.hpp"

////////////////////////////////////////////////////////////////////////////////
//  glm library
////////////////////////////////////////////////////////////////////////////////

#define GLM_FORCE_RADIANS
#define GLM_FORCE_ALIGNED_GENTYPES

#include "glm/glm.hpp"
#include "glm/gtx/norm.hpp"
#include "glm/gtc/matrix_access.hpp"
#include "glm/gtc/matrix_transform.hpp"
#include "glm/gtx/matrix_transform_2d.hpp"
#include "glm/gtc/matrix_inverse.hpp"
#include "glm/gtc/type_ptr.hpp"
#include "glm/gtc/type_aligned.hpp"
#include "glm/gtx/transform.hpp"

////////////////////////////////////////////////////////////////////////////////
//  GLEW library
////////////////////////////////////////////////////////////////////////////////

#define GLEW_STATIC

#include "GLEW/glew.h"

////////////////////////////////////////////////////////////////////////////////
//  GLFW library
////////////////////////////////////////////////////////////////////////////////

#include "GLFW/glfw3.h"

////////////////////////////////////////////////////////////////////////////////
//  Assimp library
////////////////////////////////////////////////////////////////////////////////

#include "assimp/scene.h"
#include "assimp/postprocess.h"
#include "assimp/Importer.hpp"
#include "assimp/Exporter.hpp"
#include "assimp/pbrmaterial.h"

////////////////////////////////////////////////////////////////////////////////
//  Eigen library
////////////////////////////////////////////////////////////////////////////////

#define EIGEN_USE_BLAS
#define EIGEN_DONT_PARALLELIZE
#define EIGEN_USE_LAPACKE

#define LAPACK_COMPLEX_CUSTOM
#define lapack_complex_float std::complex<float>
#define lapack_complex_double std::complex<double>

#ifndef __AVX2__
#define __AVX2__
#endif

#include "Eigen/Core"
#include "unsupported/Eigen/MatrixFunctions"
#include "unsupported/Eigen/Polynomials"

////////////////////////////////////////////////////////////////////////////////
//  gsl library
////////////////////////////////////////////////////////////////////////////////

#include <gsl/gsl_errno.h>
#include "gsl/gsl_interp.h"
#include "gsl/gsl_integration.h"
#include "gsl/gsl_sf_exp.h"
#include "gsl/gsl_sf_bessel.h"
#include "gsl/gsl_sf_gamma.h"
#include "gsl/gsl_sf_log.h"

////////////////////////////////////////////////////////////////////////////////
//  boost libraries
////////////////////////////////////////////////////////////////////////////////

#include "boost/multi_array.hpp"
#include "boost/dynamic_bitset.hpp"
#include "boost/iterator/counting_iterator.hpp"

#include "boost/uuid/uuid.hpp"
#include "boost/uuid/uuid_generators.hpp"

#include "boost/math/quadrature/gauss_kronrod.hpp"
#include "boost/math/special_functions/bessel.hpp"
#include "boost/math/special_functions/binomial.hpp"
#include "boost/math/special_functions/gamma.hpp"
#include "boost/math/tools/rational.hpp"

////////////////////////////////////////////////////////////////////////////////
//  OpenCV library
////////////////////////////////////////////////////////////////////////////////

#include "opencv2/core.hpp"
#include "opencv2/core/eigen.hpp"
#include "opencv2/imgproc.hpp"

////////////////////////////////////////////////////////////////////////////////
//  ceres library
////////////////////////////////////////////////////////////////////////////////

#undef ERROR
#include "ceres/ceres.h"

////////////////////////////////////////////////////////////////////////////////
//  stb libraries
////////////////////////////////////////////////////////////////////////////////

#include "stb/stb_image.h"
#include "stb/stb_image_write.h"

////////////////////////////////////////////////////////////////////////////////
//  ImGui library
////////////////////////////////////////////////////////////////////////////////

#define IMGUI_DEFINE_MATH_OPERATORS
#define IMGUI_DISABLE_OBSOLETE_FUNCTIONS
#define NO_IMGUIVARIOUSCONTROLS_ANIMATEDIMAGE
#define NO_IMGUIFILESYSTEM

#include "imgui/imgui.h"
#include "imgui/imgui_internal.h"
#include "imgui_plugins/implot.h"
#include "imgui_plugins/ImGuiFileDialog.h"
#include "imgui_plugins/CustomFont.h"

////////////////////////////////////////////////////////////////////////////////
//  json library
////////////////////////////////////////////////////////////////////////////////

#include "nlohmann/json.hpp"

////////////////////////////////////////////////////////////////////////////////
//  tabulate library
////////////////////////////////////////////////////////////////////////////////

#include "tabulate/table.hpp"

////////////////////////////////////////////////////////////////////////////////
//  indicators
////////////////////////////////////////////////////////////////////////////////

#include <indicators/progress_bar.hpp>

////////////////////////////////////////////////////////////////////////////////
//  CUDA library
////////////////////////////////////////////////////////////////////////////////

#ifdef HAS_Cuda
#include "nvrtc.h"
#endif

////////////////////////////////////////////////////////////////////////////////
//  Matlab API
////////////////////////////////////////////////////////////////////////////////

#ifdef HAS_Matlab
#include "MatlabEngine.hpp"
#include "MatlabDataArray.hpp"
#endif

////////////////////////////////////////////////////////////////////////////////
//  Tensorflow C API
////////////////////////////////////////////////////////////////////////////////

#include "tensorflow/c/c_api.h"

////////////////////////////////////////////////////////////////////////////////
//  C++ custom literals
////////////////////////////////////////////////////////////////////////////////

using namespace std::literals;